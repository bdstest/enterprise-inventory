services:
  # PostgreSQL Database - Development Configuration
  postgres:
    image: postgres:15-alpine
    container_name: inventory_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-inventory_dev}
      POSTGRES_USER: ${POSTGRES_USER:-inventory_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword123}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - inventory_network

  # Redis Cache - Development
  redis:
    image: redis:7-alpine
    container_name: inventory_redis_dev
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-devredis123}
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - inventory_network
    command: redis-server --requirepass ${REDIS_PASSWORD:-devredis123}

  # FastAPI Application - Development
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_app_dev
    restart: unless-stopped
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-inventory_user}:${POSTGRES_PASSWORD:-devpassword123}@postgres:5432/${POSTGRES_DB:-inventory_dev}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-devredis123}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-secret-change-in-production}
      - JWT_ALGORITHM=HS256
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src:ro
      - ./uploads:/app/uploads
    networks:
      - inventory_network
    depends_on:
      - postgres
      - redis

networks:
  inventory_network:
    driver: bridge

volumes:
  postgres_dev_data:
  redis_dev_data: