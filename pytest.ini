[tool:pytest]
# Pytest configuration for Enterprise Inventory System

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10

# Coverage configuration  
addopts = 
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=75

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (with database/external services)
    api: API endpoint tests
    auth: Authentication and authorization tests  
    etl: ETL and data processing tests
    performance: Performance and load tests
    security: Security and vulnerability tests
    slow: Slow tests (skip with -m "not slow")
    requires_db: Tests requiring database connection
    requires_redis: Tests requiring Redis connection

# Minimum version
minversion = 7.0

# Test timeout (prevent hanging tests)
timeout = 300

# Async test support
asyncio_mode = auto

# Database test configuration
# These are used by test fixtures for database setup/teardown
env =
    TEST_DATABASE_URL = postgresql://postgres:postgres@localhost/enterprise_inventory_test
    TEST_REDIS_URL = redis://localhost:6379/1
    JWT_SECRET = test-secret-key-for-testing-only

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning  
    ignore::UserWarning:.*unclosed.*
    ignore::sqlalchemy.exc.SAWarning